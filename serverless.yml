service: bgc

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1

  functions:
  getTopProducts:
    handler: handler.getTopProducts
    events:
      - http:
          path: top-products
          method: get

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: BGC-api
        EndpointConfiguration:
          Types:
            - REGIONAL
    ApiGatewayDeployment:
      Type: AWS::ApiGateway::Deployment
      DependsOn: ApiGatewayMethod
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        StageName: prod
    ApiGatewayMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        ResourceId:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        HttpMethod: GET
        AuthorizationType: NONE
        Integration:
          Type: AWS_PROXY
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
              - ''
              - - 'arn:aws:apigateway:'
                - Ref: AWS::Region
                - ':lambda:path/2015-03-31/functions/'
                - Fn::GetAtt:
                    - ScraperLambdaFunction
                    - Arn
                - '/invocations'
        MethodResponses:
          - StatusCode: '200'
            ResponseModels:
              application/json: 'Empty'
            ResponseParameters: {}
    ScraperLambdaFunction:
      Type: AWS::Lambda::Function
      Properties:
        Code:
          . . .
        Handler: handler.scrape
        Role:
          . . .
        Runtime: nodejs12.x


